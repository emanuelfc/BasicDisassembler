/*
	
	x86 Opcodes
	
	A primary opcode can be 1, 2, or 3 bytes in length. An additional 3-bit opcode field is sometimes encoded in the
ModR/M byte. Smaller fields can be defined within the primary opcode. Such fields define the direction of operation,
size of displacements, register encoding, condition codes, or sign extension. Encoding fields used by an
opcode vary depending on the class of operation.


	Two-byte Opcodes formats follow one of the following:
	
	- An escape opcode byte 0x0F as the primary opcode and a second opcode byte.
	- A mandatory prefix (66H, F2H, or F3H), an escape opcode byte, 
	and a second opcode byte (same as previous point).

	Three-byte Opcodes formats follow one of the following:
	- An escape opcode byte 0FH as the primary opcode, plus two additional opcode bytes.
	- A mandatory prefix (66H, F2H, or F3H), an escape opcode byte, 
	plus two additional opcode bytes (same as previous point).

*/

// Escape Codes

#define x86_ESC_OPCODE_1BYTE 	0x0F
#define x86_ESC_OPCODE_2BYTE_1 	0x3A
#define x86_ESC_OPCODE_2BYTE_2 	0x38